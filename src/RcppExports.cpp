// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// em
List em(NumericVector& param2, IntegerVector& xvec, IntegerVector& yvec, IntegerVector& freq, int& n, int& se, int& maxiter, double& tol, int showFlag, int bnb);
RcppExport SEXP _bzinb_em(SEXP param2SEXP, SEXP xvecSEXP, SEXP yvecSEXP, SEXP freqSEXP, SEXP nSEXP, SEXP seSEXP, SEXP maxiterSEXP, SEXP tolSEXP, SEXP showFlagSEXP, SEXP bnbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type param2(param2SEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type xvec(xvecSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type yvec(yvecSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type freq(freqSEXP);
    Rcpp::traits::input_parameter< int& >::type n(nSEXP);
    Rcpp::traits::input_parameter< int& >::type se(seSEXP);
    Rcpp::traits::input_parameter< int& >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type showFlag(showFlagSEXP);
    Rcpp::traits::input_parameter< int >::type bnb(bnbSEXP);
    rcpp_result_gen = Rcpp::wrap(em(param2, xvec, yvec, freq, n, se, maxiter, tol, showFlag, bnb));
    return rcpp_result_gen;
END_RCPP
}
// emReg
List emReg(NumericVector& param2, IntegerVector& xvec, IntegerVector& yvec, NumericMatrix& ZZ, NumericMatrix& WW, int& pZ, int& pW, int& n, int& se, int& maxiter, double& tol, int showFlag, int bnb);
RcppExport SEXP _bzinb_emReg(SEXP param2SEXP, SEXP xvecSEXP, SEXP yvecSEXP, SEXP ZZSEXP, SEXP WWSEXP, SEXP pZSEXP, SEXP pWSEXP, SEXP nSEXP, SEXP seSEXP, SEXP maxiterSEXP, SEXP tolSEXP, SEXP showFlagSEXP, SEXP bnbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type param2(param2SEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type xvec(xvecSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type yvec(yvecSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type ZZ(ZZSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type WW(WWSEXP);
    Rcpp::traits::input_parameter< int& >::type pZ(pZSEXP);
    Rcpp::traits::input_parameter< int& >::type pW(pWSEXP);
    Rcpp::traits::input_parameter< int& >::type n(nSEXP);
    Rcpp::traits::input_parameter< int& >::type se(seSEXP);
    Rcpp::traits::input_parameter< int& >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type showFlag(showFlagSEXP);
    Rcpp::traits::input_parameter< int >::type bnb(bnbSEXP);
    rcpp_result_gen = Rcpp::wrap(emReg(param2, xvec, yvec, ZZ, WW, pZ, pW, n, se, maxiter, tol, showFlag, bnb));
    return rcpp_result_gen;
END_RCPP
}
// dBvZINB_Expt
void dBvZINB_Expt(int& x, int& y, int& freq, double& a0, double& a1, double& a2, double& b1, double& b2, double& p1, double& p2, double& p3, double& p4, NumericVector& expt, NumericVector& s_i, NumericVector& info, int se, int bnb, int infoReg);
RcppExport SEXP _bzinb_dBvZINB_Expt(SEXP xSEXP, SEXP ySEXP, SEXP freqSEXP, SEXP a0SEXP, SEXP a1SEXP, SEXP a2SEXP, SEXP b1SEXP, SEXP b2SEXP, SEXP p1SEXP, SEXP p2SEXP, SEXP p3SEXP, SEXP p4SEXP, SEXP exptSEXP, SEXP s_iSEXP, SEXP infoSEXP, SEXP seSEXP, SEXP bnbSEXP, SEXP infoRegSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int& >::type y(ySEXP);
    Rcpp::traits::input_parameter< int& >::type freq(freqSEXP);
    Rcpp::traits::input_parameter< double& >::type a0(a0SEXP);
    Rcpp::traits::input_parameter< double& >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< double& >::type a2(a2SEXP);
    Rcpp::traits::input_parameter< double& >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double& >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double& >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< double& >::type p2(p2SEXP);
    Rcpp::traits::input_parameter< double& >::type p3(p3SEXP);
    Rcpp::traits::input_parameter< double& >::type p4(p4SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type expt(exptSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type s_i(s_iSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type info(infoSEXP);
    Rcpp::traits::input_parameter< int >::type se(seSEXP);
    Rcpp::traits::input_parameter< int >::type bnb(bnbSEXP);
    Rcpp::traits::input_parameter< int >::type infoReg(infoRegSEXP);
    dBvZINB_Expt(x, y, freq, a0, a1, a2, b1, b2, p1, p2, p3, p4, expt, s_i, info, se, bnb, infoReg);
    return R_NilValue;
END_RCPP
}
// dBvZINB_Expt_vec
void dBvZINB_Expt_vec(IntegerVector& xvec, IntegerVector& yvec, IntegerVector& freq, int& n, double& a0, double& a1, double& a2, double& b1, double& b2, double& p1, double& p2, double& p3, double& p4, NumericVector& expt, NumericVector& s_i, NumericVector& info, int se, int bnb);
RcppExport SEXP _bzinb_dBvZINB_Expt_vec(SEXP xvecSEXP, SEXP yvecSEXP, SEXP freqSEXP, SEXP nSEXP, SEXP a0SEXP, SEXP a1SEXP, SEXP a2SEXP, SEXP b1SEXP, SEXP b2SEXP, SEXP p1SEXP, SEXP p2SEXP, SEXP p3SEXP, SEXP p4SEXP, SEXP exptSEXP, SEXP s_iSEXP, SEXP infoSEXP, SEXP seSEXP, SEXP bnbSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector& >::type xvec(xvecSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type yvec(yvecSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type freq(freqSEXP);
    Rcpp::traits::input_parameter< int& >::type n(nSEXP);
    Rcpp::traits::input_parameter< double& >::type a0(a0SEXP);
    Rcpp::traits::input_parameter< double& >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< double& >::type a2(a2SEXP);
    Rcpp::traits::input_parameter< double& >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double& >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double& >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< double& >::type p2(p2SEXP);
    Rcpp::traits::input_parameter< double& >::type p3(p3SEXP);
    Rcpp::traits::input_parameter< double& >::type p4(p4SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type expt(exptSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type s_i(s_iSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type info(infoSEXP);
    Rcpp::traits::input_parameter< int >::type se(seSEXP);
    Rcpp::traits::input_parameter< int >::type bnb(bnbSEXP);
    dBvZINB_Expt_vec(xvec, yvec, freq, n, a0, a1, a2, b1, b2, p1, p2, p3, p4, expt, s_i, info, se, bnb);
    return R_NilValue;
END_RCPP
}
// logLin
void logLin(NumericMatrix& mat, NumericVector& vec, int& n, int& p, int sign, NumericVector& result);
RcppExport SEXP _bzinb_logLin(SEXP matSEXP, SEXP vecSEXP, SEXP nSEXP, SEXP pSEXP, SEXP signSEXP, SEXP resultSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type vec(vecSEXP);
    Rcpp::traits::input_parameter< int& >::type n(nSEXP);
    Rcpp::traits::input_parameter< int& >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type sign(signSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type result(resultSEXP);
    logLin(mat, vec, n, p, sign, result);
    return R_NilValue;
END_RCPP
}
// dBvZINB_Expt_mat
void dBvZINB_Expt_mat(IntegerVector& xvec, IntegerVector& yvec, NumericMatrix& ZZ, NumericMatrix& WW, int& n, int& pZ, int& pW, NumericVector& alpha, NumericVector& b1, NumericVector& b2, NumericVector& p1, NumericVector& p2, NumericVector& p3, NumericVector& p4, NumericMatrix& expt, NumericVector& s_i, NumericVector& s_i_abp, NumericVector& info, int se, int bnb, NumericVector& expt_i);
RcppExport SEXP _bzinb_dBvZINB_Expt_mat(SEXP xvecSEXP, SEXP yvecSEXP, SEXP ZZSEXP, SEXP WWSEXP, SEXP nSEXP, SEXP pZSEXP, SEXP pWSEXP, SEXP alphaSEXP, SEXP b1SEXP, SEXP b2SEXP, SEXP p1SEXP, SEXP p2SEXP, SEXP p3SEXP, SEXP p4SEXP, SEXP exptSEXP, SEXP s_iSEXP, SEXP s_i_abpSEXP, SEXP infoSEXP, SEXP seSEXP, SEXP bnbSEXP, SEXP expt_iSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector& >::type xvec(xvecSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type yvec(yvecSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type ZZ(ZZSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type WW(WWSEXP);
    Rcpp::traits::input_parameter< int& >::type n(nSEXP);
    Rcpp::traits::input_parameter< int& >::type pZ(pZSEXP);
    Rcpp::traits::input_parameter< int& >::type pW(pWSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type p2(p2SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type p3(p3SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type p4(p4SEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type expt(exptSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type s_i(s_iSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type s_i_abp(s_i_abpSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type info(infoSEXP);
    Rcpp::traits::input_parameter< int >::type se(seSEXP);
    Rcpp::traits::input_parameter< int >::type bnb(bnbSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type expt_i(expt_iSEXP);
    dBvZINB_Expt_mat(xvec, yvec, ZZ, WW, n, pZ, pW, alpha, b1, b2, p1, p2, p3, p4, expt, s_i, s_i_abp, info, se, bnb, expt_i);
    return R_NilValue;
END_RCPP
}
// inv_digamma
double inv_digamma(double x, double y);
RcppExport SEXP _bzinb_inv_digamma(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(inv_digamma(x, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bzinb_em", (DL_FUNC) &_bzinb_em, 10},
    {"_bzinb_emReg", (DL_FUNC) &_bzinb_emReg, 13},
    {"_bzinb_dBvZINB_Expt", (DL_FUNC) &_bzinb_dBvZINB_Expt, 18},
    {"_bzinb_dBvZINB_Expt_vec", (DL_FUNC) &_bzinb_dBvZINB_Expt_vec, 18},
    {"_bzinb_logLin", (DL_FUNC) &_bzinb_logLin, 6},
    {"_bzinb_dBvZINB_Expt_mat", (DL_FUNC) &_bzinb_dBvZINB_Expt_mat, 21},
    {"_bzinb_inv_digamma", (DL_FUNC) &_bzinb_inv_digamma, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_bzinb(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
